{"version":3,"file":"Our.Umbraco.Gmaps.js","sources":["../../../Client/assets/src/gmaps-editor.ts"],"sourcesContent":["import { LitElement, html, customElement, property } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbPropertyEditorUiElement } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\n@customElement(\"my-suggestions-property-editor-ui\")\r\nexport class MySuggestionsPropertyEditorUIElement\r\n    extends LitElement\r\n    implements UmbPropertyEditorUiElement\r\n{\r\n    @property({ type: String })\r\n    public value = \"\";\r\n\r\n    render() {\r\n        return html`\r\n            <uui-input \r\n                    .value=\"${ this.value ?? \"\" }\" \r\n                    @input=\"${this.onInput}\"></uui-input>\r\n        `;\r\n    }\r\n    \r\n    onInput(evt:InputEvent) {\r\n        const val = (evt?.target as HTMLInputElement).value;\r\n        this.value = val;\r\n        this.dispatchEvent(new CustomEvent('property-value-change'));\r\n    }\r\n}\r\n\r\nexport default MySuggestionsPropertyEditorUIElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        \"my-suggestions-property-editor-ui\": MySuggestionsPropertyEditorUIElement;\r\n    }\r\n}"],"names":["MySuggestionsPropertyEditorUIElement","LitElement","html","evt","val","__decorateClass","property","customElement","MySuggestionsPropertyEditorUIElement$1"],"mappings":";;;;;;AAIa,IAAAA,IAAN,cACKC,EAEZ;AAAA,EAHO,cAAA;AAAA,UAAA,GAAA,SAAA,GAKH,KAAO,QAAQ;AAAA,EAAA;AAAA,EAEf,SAAS;AACE,WAAAC;AAAA;AAAA,8BAEgB,KAAK,SAAS,EAAG;AAAA,8BAClB,KAAK,OAAO;AAAA;AAAA,EAEtC;AAAA,EAEA,QAAQC,GAAgB;AACd,UAAAC,KAAOD,KAAA,gBAAAA,EAAK,QAA4B;AAC9C,SAAK,QAAQC,GACb,KAAK,cAAc,IAAI,YAAY,uBAAuB,CAAC;AAAA,EAC/D;AACJ;AAfWC,EAAA;AAAA,EADNC,EAAS,EAAE,MAAM,QAAQ;AAAA,GAJjBN,EAKF,WAAA,SAAA,CAAA;AALEA,IAANK,EAAA;AAAA,EADNE,EAAc,mCAAmC;AAAA,GACrCP,CAAA;AAsBb,MAAAQ,IAAeR;"}